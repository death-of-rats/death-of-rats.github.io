<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Death Of Rats (Posts about asm)</title><link>https://death-of-rats.github.io/</link><description></description><atom:link href="https://death-of-rats.github.io/categories/asm.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 death-of-rats 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;&lt;img alt="Creative Commons Licence" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.</copyright><lastBuildDate>Fri, 10 Jan 2020 04:29:38 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>0x09 Bootloader - read disk parameters</title><link>https://death-of-rats.github.io/posts/bootloader-read-disk-parameters/</link><dc:creator>death-of-rats</dc:creator><description>&lt;div&gt;&lt;p&gt;When BIOS finishes its job, it finds a bootable disk and loads the first sector
- the first 512 bytes. The magic 0xaa55 is the value marking bootable 510
bytes. But 510 bytes is not enough for a greedy programmer.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://death-of-rats.github.io/posts/bootloader-read-disk-parameters/"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>asm</category><category>os</category><category>qemu</category><category>re</category><guid>https://death-of-rats.github.io/posts/bootloader-read-disk-parameters/</guid><pubDate>Fri, 10 May 2019 00:00:00 GMT</pubDate></item><item><title>0x08 Debug booting code in QEMU</title><link>https://death-of-rats.github.io/posts/gdb-qemu-booting/</link><dc:creator>death-of-rats</dc:creator><description>&lt;div&gt;&lt;p&gt;How to test and debug your own OS? For running one can use any of available
emulators or VMs. I choose &lt;strong&gt;QEMU&lt;/strong&gt;. But running isn't enough. Debugging is
very important - at least for me. In this post, I will build the 'OS' image,
run it and attach &lt;strong&gt;gdb&lt;/strong&gt; for debugging.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://death-of-rats.github.io/posts/gdb-qemu-booting/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>asm</category><category>os</category><category>qemu</category><category>re</category><guid>https://death-of-rats.github.io/posts/gdb-qemu-booting/</guid><pubDate>Fri, 03 May 2019 00:00:00 GMT</pubDate></item><item><title>0x07 Yasm: Echo with libc.</title><link>https://death-of-rats.github.io/posts/yasm-libc-echo/</link><dc:creator>death-of-rats</dc:creator><description>&lt;div&gt;&lt;p&gt;Let us write something with standard C functions like &lt;em&gt;printf&lt;/em&gt; or &lt;em&gt;scanf&lt;/em&gt;. What
I plan to learn from this is how to link the program with libc and do a little
refactor to program structure. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://death-of-rats.github.io/posts/yasm-libc-echo/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>asm</category><category>re</category><guid>https://death-of-rats.github.io/posts/yasm-libc-echo/</guid><pubDate>Mon, 29 Apr 2019 00:00:00 GMT</pubDate></item><item><title>0x06 Yasm: Hello World! ELF64</title><link>https://death-of-rats.github.io/posts/yasm-hello-world/</link><dc:creator>death-of-rats</dc:creator><description>&lt;div&gt;&lt;p&gt;First, try to write some x64 assembler program. I will use &lt;strong&gt;yasm&lt;/strong&gt; and &lt;strong&gt;ld&lt;/strong&gt;.
I have a few books about assembler, but not for 64-bit architecture. Lucky for
me, I found the "Introduction to 64 Bit Assembly Language Programming for Linux
and OS X" by Ray Seyfarth.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://death-of-rats.github.io/posts/yasm-hello-world/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>asm</category><category>re</category><guid>https://death-of-rats.github.io/posts/yasm-hello-world/</guid><pubDate>Fri, 26 Apr 2019 00:00:00 GMT</pubDate></item></channel></rss>