<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Death Of Rats (Posts about ctf)</title><link>https://death-of-rats.github.io/</link><description></description><atom:link href="https://death-of-rats.github.io/categories/ctf.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 death-of-rats 
&lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;&lt;img alt="Creative Commons Licence" style="border-width:0" src="https://i.creativecommons.org/l/by/4.0/80x15.png" /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel="license" href="http://creativecommons.org/licenses/by/4.0/"&gt;Creative Commons Attribution 4.0 International License&lt;/a&gt;.</copyright><lastBuildDate>Wed, 23 Sep 2020 15:02:35 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>0x05 Format String Attack</title><link>https://death-of-rats.github.io/posts/format-string-attack/</link><dc:creator>death-of-rats</dc:creator><description>&lt;div&gt;&lt;p&gt;When trying to take control over the program, one must sometimes alter
information stored on the stack. StackOverflow is one possibility. It is
constrained by the order of variables placed on the stack. Format String Attack
allows overstepping this constraint. This kind of attack uses &lt;em&gt;printf&lt;/em&gt;
functions family vulnerability. If one use &lt;em&gt;printf&lt;/em&gt; with a variable instead of
the format string, you have your window of opportunity. Of course, if you are
the one who puts data to this variable.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://death-of-rats.github.io/posts/format-string-attack/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>cpp</category><category>ctf</category><category>pwn</category><category>re</category><guid>https://death-of-rats.github.io/posts/format-string-attack/</guid><pubDate>Thu, 18 Apr 2019 22:00:00 GMT</pubDate></item><item><title>Icon 2018 CTF third challenge</title><link>https://death-of-rats.github.io/posts/icon_2018_ctf_third_challenge/</link><dc:creator>death-of-rats</dc:creator><description>&lt;div&gt;&lt;p&gt;The third challenge is a reverse engineering problem. The zipped package contains 3 files:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;crackme_baby
crackme.py
run.sh
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Python file contains definitions of simple math operations (add, sub, mul, div2, mod, inf). Let us
 disassemble crackme_baby file.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://death-of-rats.github.io/posts/icon_2018_ctf_third_challenge/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>ctf</category><category>icon</category><category>re</category><category>reverse</category><category>writeups</category><guid>https://death-of-rats.github.io/posts/icon_2018_ctf_third_challenge/</guid><pubDate>Thu, 13 Sep 2018 22:00:00 GMT</pubDate></item></channel></rss>